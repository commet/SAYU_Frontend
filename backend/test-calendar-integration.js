// Ï†ÑÏãú Ï∫òÎ¶∞Îçî ÌÜµÌï© Í∏∞Îä• ÌÖåÏä§Ìä∏
const express = require('express');
const app = express();

app.use(express.json());

// ÌÖåÏä§Ìä∏Ïö© Ï†ÑÏãú Îç∞Ïù¥ÌÑ∞
const sampleExhibition = {
  id: 'test-exhibition-001',
  title: 'Î™®ÎÑ§ÏôÄ Ïù∏ÏÉÅÏ£ºÏùòÏùò Í±∞Ïû•Îì§',
  institution_name: 'Íµ≠Î¶ΩÌòÑÎåÄÎØ∏Ïà†Í¥Ä',
  address: 'ÏÑúÏö∏ÌäπÎ≥ÑÏãú Ï¢ÖÎ°úÍµ¨ ÏÇºÏ≤≠Î°ú 30',
  city: 'ÏÑúÏö∏',
  start_date: '2025-08-01',
  end_date: '2025-10-15',
  description: 'ÌÅ¥Î°úÎìú Î™®ÎÑ§Î•º Ï§ëÏã¨ÏúºÎ°ú Ìïú Ïù∏ÏÉÅÏ£ºÏùò ÎåÄÌëú ÏûëÌíàÎì§ÏùÑ ÎßåÎÇòÎ≥¥ÏÑ∏Ïöî. ÎπõÍ≥º ÏÉâÏ±ÑÏùò ÎßàÎ≤ïÏùÑ ÌÜµÌï¥ ÏùºÏÉÅÏùò ÏïÑÎ¶ÑÎã§ÏõÄÏùÑ Ïû¨Î∞úÍ≤¨ÌïòÎäî Ï†ÑÏãúÏûÖÎãàÎã§.',
  website_url: 'https://mmca.go.kr'
};

// Google Ï∫òÎ¶∞Îçî URL ÏÉùÏÑ± Ìï®Ïàò
function generateGoogleCalendarUrl(exhibition) {
  const startDate = new Date(exhibition.start_date);
  const endDate = new Date(exhibition.end_date);

  const googleParams = new URLSearchParams({
    action: 'TEMPLATE',
    text: exhibition.title,
    dates: `${formatDateForGoogle(startDate)}/${formatDateForGoogle(endDate)}`,
    details: `${exhibition.description || ''}\n\nüìç ${exhibition.institution_name}\nüåê ${exhibition.website_url || ''}`,
    location: `${exhibition.institution_name}, ${exhibition.address || exhibition.city}`,
    sf: 'true',
    output: 'xml'
  });

  return `https://calendar.google.com/calendar/render?${googleParams.toString()}`;
}

// Apple Ï∫òÎ¶∞ÎçîÏö© ICS ÌååÏùº ÏÉùÏÑ± Ìï®Ïàò
function generateICSContent(exhibition) {
  const startDate = new Date(exhibition.start_date);
  const endDate = new Date(exhibition.end_date);

  return `BEGIN:VCALENDAR
VERSION:2.0
PRODID:-//SAYU//Exhibition Calendar//EN
BEGIN:VEVENT
UID:${exhibition.id}@sayu.art
DTSTART;VALUE=DATE:${formatDateForICS(startDate)}
DTEND;VALUE=DATE:${formatDateForICS(endDate)}
SUMMARY:${exhibition.title}
DESCRIPTION:${exhibition.description || ''}\\n\\nüìç ${exhibition.institution_name}\\nüåê ${exhibition.website_url || ''}
LOCATION:${exhibition.institution_name}, ${exhibition.address || exhibition.city}
STATUS:CONFIRMED
SEQUENCE:0
END:VEVENT
END:VCALENDAR`;
}

// Outlook Ï∫òÎ¶∞Îçî URL ÏÉùÏÑ± Ìï®Ïàò
function generateOutlookUrl(exhibition) {
  const startDate = new Date(exhibition.start_date);
  const endDate = new Date(exhibition.end_date);

  const outlookParams = new URLSearchParams({
    path: '/calendar/action/compose',
    rru: 'addevent',
    subject: exhibition.title,
    startdt: startDate.toISOString(),
    enddt: endDate.toISOString(),
    body: `${exhibition.description || ''}\n\nüìç ${exhibition.institution_name}\nüåê ${exhibition.website_url || ''}`,
    location: `${exhibition.institution_name}, ${exhibition.address || exhibition.city}`
  });

  return `https://outlook.live.com/calendar/0/deeplink/compose?${outlookParams.toString()}`;
}

function formatDateForGoogle(date) {
  return `${date.toISOString().replace(/[-:]/g, '').split('.')[0]}Z`;
}

function formatDateForICS(date) {
  return date.toISOString().split('T')[0].replace(/-/g, '');
}

// API ÏóîÎìúÌè¨Ïù∏Ìä∏Îì§
app.get('/api/calendar/test-exhibition', (req, res) => {
  res.json({
    exhibition: sampleExhibition,
    calendar_links: {
      google: generateGoogleCalendarUrl(sampleExhibition),
      outlook: generateOutlookUrl(sampleExhibition),
      ics_content: generateICSContent(sampleExhibition)
    }
  });
});

app.get('/api/calendar/google/:exhibitionId', (req, res) => {
  // Ïã§Ï†ú Ï†ÑÏãú Îç∞Ïù¥ÌÑ∞Î•º Í∞ÄÏ†∏Ïò§Îäî ÎåÄÏã† ÏÉòÌîå Îç∞Ïù¥ÌÑ∞ ÏÇ¨Ïö©
  const googleUrl = generateGoogleCalendarUrl(sampleExhibition);
  res.redirect(googleUrl);
});

app.get('/api/calendar/outlook/:exhibitionId', (req, res) => {
  const outlookUrl = generateOutlookUrl(sampleExhibition);
  res.redirect(outlookUrl);
});

app.get('/api/calendar/ics/:exhibitionId', (req, res) => {
  const icsContent = generateICSContent(sampleExhibition);

  res.setHeader('Content-Type', 'text/calendar');
  res.setHeader('Content-Disposition', `attachment; filename="${sampleExhibition.title}.ics"`);
  res.send(icsContent);
});

app.get('/', (req, res) => {
  res.json({
    service: 'SAYU Calendar Integration Test',
    version: '1.0.0',
    sample_exhibition: sampleExhibition,
    endpoints: [
      'GET /api/calendar/test-exhibition - ÌÖåÏä§Ìä∏ Ï†ÑÏãú Î∞è Ï∫òÎ¶∞Îçî ÎßÅÌÅ¨',
      'GET /api/calendar/google/:exhibitionId - Google Ï∫òÎ¶∞ÎçîÎ°ú Î¶¨Îã§Ïù¥Î†âÌä∏',
      'GET /api/calendar/outlook/:exhibitionId - Outlook Ï∫òÎ¶∞ÎçîÎ°ú Î¶¨Îã§Ïù¥Î†âÌä∏',
      'GET /api/calendar/ics/:exhibitionId - ICS ÌååÏùº Îã§Ïö¥Î°úÎìú'
    ]
  });
});

const PORT = 3007;

app.listen(PORT, () => {
  console.log(`üóìÔ∏è  SAYU Calendar Test Server running on http://localhost:${PORT}`);
  console.log('üìÖ Test endpoints:');
  console.log(`   GET  http://localhost:${PORT}/api/calendar/test-exhibition`);
  console.log(`   GET  http://localhost:${PORT}/api/calendar/google/test-exhibition-001`);
  console.log(`   GET  http://localhost:${PORT}/api/calendar/outlook/test-exhibition-001`);
  console.log(`   GET  http://localhost:${PORT}/api/calendar/ics/test-exhibition-001`);

  console.log('\nüß™ Testing calendar integration...');

  // ÏûêÎèô ÌÖåÏä§Ìä∏
  setTimeout(async () => {
    try {
      console.log('\n1Ô∏è‚É£ Testing calendar URL generation...');

      const googleUrl = generateGoogleCalendarUrl(sampleExhibition);
      console.log('‚úÖ Google Calendar URL generated');
      console.log(`   ${googleUrl.substring(0, 100)}...`);

      const outlookUrl = generateOutlookUrl(sampleExhibition);
      console.log('‚úÖ Outlook Calendar URL generated');
      console.log(`   ${outlookUrl.substring(0, 100)}...`);

      const icsContent = generateICSContent(sampleExhibition);
      console.log('‚úÖ ICS file content generated');
      console.log(`   ${icsContent.split('\n')[0]}...`);

      console.log('\n2Ô∏è‚É£ Calendar integration test completed!');
      console.log('üéâ All calendar features are working correctly!');

    } catch (error) {
      console.error('‚ùå Calendar test failed:', error);
    }
  }, 1000);
});
