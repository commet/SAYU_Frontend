#!/usr/bin/env node
require('dotenv').config();

const axios = require('axios');
const { Pool } = require('pg');

const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false
});

// Rijksmuseum API Key (Î¨¥Î£å Îì±Î°ù ÌïÑÏöî)
const API_KEY = process.env.RIJKSMUSEUM_API_KEY || 'fakekey';

class RijksmuseumCollector {
  constructor() {
    this.baseUrl = 'https://www.rijksmuseum.nl/api';
    this.language = 'en'; // en, nl ÏßÄÏõê
  }

  async searchExhibitions() {
    console.log('üèõÔ∏è Rijksmuseum API - Ï†ÑÏãú Îç∞Ïù¥ÌÑ∞ ÏàòÏßë ÏãúÏûë\n');

    try {
      // 1. ÌòÑÏû¨ Ï†ÑÏãúÏ§ëÏù∏ ÏûëÌíà Í≤ÄÏÉâ
      console.log('üîç ÌòÑÏû¨ Ï†ÑÏãúÏ§ëÏù∏ ÏûëÌíà Í≤ÄÏÉâ...');
      const params = {
        key: API_KEY,
        format: 'json',
        culture: this.language,
        imgonly: true,
        toppieces: true, // Ï£ºÏöî ÏûëÌíàÎßå
        ps: 100 // ÌéòÏù¥ÏßÄÎãπ 100Í∞ú
      };

      const response = await axios.get(`${this.baseUrl}/${this.language}/collection`, { params });

      if (response.data && response.data.artObjects) {
        console.log(`‚úÖ ${response.data.artObjects.length}Í∞ú ÏûëÌíà Î∞úÍ≤¨`);

        // Ï†ÑÏãú Îç∞Ïù¥ÌÑ∞Î°ú Î≥ÄÌôò
        const exhibitions = this.convertToExhibitions(response.data.artObjects);

        // Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ï†ÄÏû•
        await this.saveToDatabase(exhibitions);

        return exhibitions;
      }
    } catch (error) {
      console.error('‚ùå API Ïò§Î•ò:', error.message);

      if (error.response?.status === 401) {
        console.log('\n‚ö†Ô∏è API ÌÇ§ ÌïÑÏöî:');
        console.log('1. https://data.rijksmuseum.nl/object-metadata/api/ Î∞©Î¨∏');
        console.log('2. Î¨¥Î£å Í≥ÑÏ†ï Îì±Î°ù');
        console.log('3. API ÌÇ§ Î∞úÍ∏â (Ï¶âÏãú ÏÇ¨Ïö© Í∞ÄÎä•)');
        console.log('4. ÌôòÍ≤ΩÎ≥ÄÏàò ÏÑ§Ï†ï: RIJKSMUSEUM_API_KEY=your_key');
      }
    }

    return [];
  }

  convertToExhibitions(artObjects) {
    const exhibitions = [];

    // Ï£ºÏ†úÎ≥ÑÎ°ú Í∑∏Î£πÌôîÌïòÏó¨ Í∞ÄÏÉÅ Ï†ÑÏãú ÏÉùÏÑ±
    const themes = new Map();

    artObjects.forEach(obj => {
      const theme = obj.classification || 'General Collection';

      if (!themes.has(theme)) {
        themes.set(theme, {
          title: `${theme} Collection`,
          artworks: []
        });
      }

      themes.get(theme).artworks.push(obj);
    });

    // Í∞Å ÌÖåÎßàÎ•º Ï†ÑÏãúÎ°ú Î≥ÄÌôò
    themes.forEach((data, theme) => {
      exhibitions.push({
        title_en: data.title,
        title_local: data.title,
        venue_name: 'Rijksmuseum',
        venue_city: 'Amsterdam',
        venue_country: 'NL',
        start_date: new Date().toISOString().split('T')[0],
        end_date: new Date(Date.now() + 180 * 24 * 60 * 60 * 1000).toISOString().split('T')[0], // 6Í∞úÏõî
        description: `Featuring ${data.artworks.length} masterpieces from the ${theme} collection`,
        artists: [...new Set(data.artworks.map(a => a.principalOrFirstMaker).filter(a => a))],
        exhibition_type: 'collection',
        artworks_count: data.artworks.length,
        official_url: 'https://www.rijksmuseum.nl',
        source: 'rijksmuseum_api'
      });
    });

    return exhibitions;
  }

  async saveToDatabase(exhibitions) {
    const client = await pool.connect();
    let saved = 0;

    try {
      await client.query('BEGIN');

      for (const exhibition of exhibitions) {
        // Ï§ëÎ≥µ ÌôïÏù∏
        const existing = await client.query(
          'SELECT id FROM exhibitions WHERE title_en = $1 AND venue_name = $2 AND source = $3',
          [exhibition.title_en, exhibition.venue_name, exhibition.source]
        );

        if (existing.rows.length === 0) {
          await client.query(`
            INSERT INTO exhibitions (
              title_en, title_local, venue_name, venue_city, venue_country,
              start_date, end_date, description, artists, exhibition_type,
              artworks_count, official_url, source, status, created_at
            ) VALUES (
              $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, 'ongoing', CURRENT_TIMESTAMP
            )
          `, [
            exhibition.title_en,
            exhibition.title_local,
            exhibition.venue_name,
            exhibition.venue_city,
            exhibition.venue_country,
            exhibition.start_date,
            exhibition.end_date,
            exhibition.description,
            exhibition.artists,
            exhibition.exhibition_type,
            exhibition.artworks_count,
            exhibition.official_url,
            exhibition.source
          ]);

          saved++;
          console.log(`‚úÖ Ï†ÄÏû•: ${exhibition.title_en}`);
        }
      }

      await client.query('COMMIT');
      console.log(`\nüìä Ï¥ù ${saved}Í∞ú Ï†ÑÏãú Ï†ÄÏû• ÏôÑÎ£å`);

    } catch (error) {
      await client.query('ROLLBACK');
      console.error('‚ùå DB Ïò§Î•ò:', error);
    } finally {
      client.release();
    }
  }
}

// Ïã§Ìñâ
async function main() {
  const collector = new RijksmuseumCollector();
  await collector.searchExhibitions();
  await pool.end();
}

if (require.main === module) {
  main();
}

module.exports = RijksmuseumCollector;
