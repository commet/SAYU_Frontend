const { Pool } = require('pg');
require('dotenv').config();

const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false
});

async function showExhibitionExamples() {
  try {
    // ÏµúÍ∑º Ï†ÑÏãú ÏòàÏãú (Íµ≠ÎÇ¥)
    console.log('\nüìç Íµ≠ÎÇ¥ Ï†ÑÏãú ÏòàÏãú:\n');
    const domesticExhibitions = await pool.query(`
      SELECT 
        e.title,
        e.start_date,
        e.end_date,
        v.name as venue_name,
        v.city,
        e.description
      FROM exhibitions e
      JOIN venues v ON e.venue_id = v.id
      WHERE v.country = 'South Korea'
      ORDER BY e.created_at DESC
      LIMIT 5
    `);

    domesticExhibitions.rows.forEach((ex, i) => {
      console.log(`${i + 1}. "${ex.title}"`);
      console.log(`   Ïû•ÏÜå: ${ex.venue_name} (${ex.city})`);
      console.log(`   Í∏∞Í∞Ñ: ${ex.start_date ? new Date(ex.start_date).toLocaleDateString() : 'N/A'} ~ ${ex.end_date ? new Date(ex.end_date).toLocaleDateString() : 'N/A'}`);
      if (ex.description) {
        console.log(`   ÏÑ§Î™Ö: ${ex.description.substring(0, 100)}...`);
      }
      console.log();
    });

    // ÏµúÍ∑º Ï†ÑÏãú ÏòàÏãú (Ìï¥Ïô∏)
    console.log('\nüåç Ìï¥Ïô∏ Ï†ÑÏãú ÏòàÏãú:\n');
    const internationalExhibitions = await pool.query(`
      SELECT 
        e.title,
        e.start_date,
        e.end_date,
        v.name as venue_name,
        v.city,
        v.country,
        e.description
      FROM exhibitions e
      JOIN venues v ON e.venue_id = v.id
      WHERE v.country != 'South Korea'
      ORDER BY e.created_at DESC
      LIMIT 5
    `);

    internationalExhibitions.rows.forEach((ex, i) => {
      console.log(`${i + 1}. "${ex.title}"`);
      console.log(`   Ïû•ÏÜå: ${ex.venue_name} (${ex.city}, ${ex.country})`);
      console.log(`   Í∏∞Í∞Ñ: ${ex.start_date ? new Date(ex.start_date).toLocaleDateString() : 'N/A'} ~ ${ex.end_date ? new Date(ex.end_date).toLocaleDateString() : 'N/A'}`);
      if (ex.description) {
        console.log(`   ÏÑ§Î™Ö: ${ex.description.substring(0, 100)}...`);
      }
      console.log();
    });

    // Ï†ÑÏ≤¥ ÌÜµÍ≥Ñ
    const stats = await pool.query(`
      SELECT 
        COUNT(*) as total,
        COUNT(CASE WHEN v.country = 'South Korea' THEN 1 END) as domestic,
        COUNT(CASE WHEN v.country != 'South Korea' THEN 1 END) as international,
        COUNT(DISTINCT e.venue_id) as unique_venues
      FROM exhibitions e
      JOIN venues v ON e.venue_id = v.id
    `);

    console.log('\nüìä ÌòÑÏû¨ Ï†ÑÏãú Îç∞Ïù¥ÌÑ∞ ÌòÑÌô©:');
    console.log(`Ï¥ù Ï†ÑÏãú: ${stats.rows[0].total}Í∞ú`);
    console.log(`- Íµ≠ÎÇ¥: ${stats.rows[0].domestic}Í∞ú`);
    console.log(`- Ìï¥Ïô∏: ${stats.rows[0].international}Í∞ú`);
    console.log(`Ï∞∏Ïó¨ Í∏∞Í¥Ä: ${stats.rows[0].unique_venues}Í∞ú`);

  } catch (error) {
    console.error('Error:', error);
  } finally {
    await pool.end();
  }
}

showExhibitionExamples();
