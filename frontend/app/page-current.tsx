'use client';

import { useState, useEffect } from 'react';
import { useRouter } from 'next/navigation';
import Link from 'next/link';
import Image from 'next/image';
import { motion } from 'framer-motion';

export default function HomePage() {
  const router = useRouter();
  const [language, setLanguage] = useState<'ko' | 'en'>('ko');
  const [selectedEmotion, setSelectedEmotion] = useState('#FF6B6B');
  const [selectedEmotionName, setSelectedEmotionName] = useState('Passion');

  // Emotion colors
  const emotionColors = [
    { color: '#FF6B6B', name: language === 'ko' ? '열정' : 'Passion' },
    { color: '#C589E8', name: language === 'ko' ? '상상' : 'Imagination' },
    { color: '#95CDB6', name: language === 'ko' ? '평온' : 'Serenity' },
    { color: '#5E85CC', name: language === 'ko' ? '사색' : 'Contemplation' },
    { color: '#FFB26B', name: language === 'ko' ? '기쁨' : 'Joy' },
    { color: '#8B7BAB', name: language === 'ko' ? '신비' : 'Mystery' },
  ];

  // Features data
  const features = [
    {
      title: language === 'ko' ? 'APT 성향 테스트' : 'APT Personality Test',
      description: language === 'ko' 
        ? '16가지 동물 캐릭터로 당신의 예술 성향을 발견하세요'
        : 'Discover your art personality with 16 animal characters',
      icon: '🎨'
    },
    {
      title: language === 'ko' ? '일일 감정 체크인' : 'Daily Emotion Check-in',
      description: language === 'ko'
        ? '매일 당신의 감정에 맞는 작품을 AI가 추천합니다'
        : 'AI recommends artworks matching your daily emotions',
      icon: '💖'
    },
    {
      title: language === 'ko' ? '전시 동행 매칭' : 'Exhibition Companion',
      description: language === 'ko'
        ? '비슷한 취향의 사람들과 전시회를 함께 관람하세요'
        : 'Visit exhibitions with people who share your taste',
      icon: '👥'
    },
    {
      title: language === 'ko' ? '퍼셉션 익스체인지' : 'Perception Exchange',
      description: language === 'ko'
        ? '같은 작품, 다른 시선. 감상을 나누고 공감하세요'
        : 'Same artwork, different perspectives. Share and empathize',
      icon: '💬'
    },
    {
      title: language === 'ko' ? 'AI 아트 프로필' : 'AI Art Profile',
      description: language === 'ko'
        ? 'AI가 생성한 당신만의 독특한 예술 프로필'
        : 'Your unique art profile generated by AI',
      icon: '🖼️'
    },
    {
      title: language === 'ko' ? '실시간 갤러리' : 'Live Gallery',
      description: language === 'ko'
        ? '함께 감상하고 실시간으로 소통하는 온라인 갤러리'
        : 'Online gallery for viewing and chatting in real-time',
      icon: '🏛️'
    }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-b from-gray-50 to-white dark:from-gray-900 dark:to-black">
      {/* Header */}
      <header className="fixed top-0 w-full bg-white/80 dark:bg-gray-900/80 backdrop-blur-md z-50 border-b border-gray-200 dark:border-gray-800">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center h-16">
            <Link href="/" className="text-2xl font-bold text-purple-600 dark:text-purple-400">
              SAYU
            </Link>
            
            <nav className="hidden md:flex space-x-8">
              <Link href="/quiz" className="text-gray-700 dark:text-gray-300 hover:text-purple-600 dark:hover:text-purple-400">
                {language === 'ko' ? '테스트' : 'Test'}
              </Link>
              <Link href="/gallery" className="text-gray-700 dark:text-gray-300 hover:text-purple-600 dark:hover:text-purple-400">
                {language === 'ko' ? '갤러리' : 'Gallery'}
              </Link>
              <Link href="/exhibitions" className="text-gray-700 dark:text-gray-300 hover:text-purple-600 dark:hover:text-purple-400">
                {language === 'ko' ? '전시' : 'Exhibitions'}
              </Link>
              <Link href="/community" className="text-gray-700 dark:text-gray-300 hover:text-purple-600 dark:hover:text-purple-400">
                {language === 'ko' ? '커뮤니티' : 'Community'}
              </Link>
            </nav>
            
            <div className="flex items-center space-x-4">
              <button
                onClick={() => setLanguage(language === 'ko' ? 'en' : 'ko')}
                className="px-3 py-1 text-sm rounded-lg bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700"
              >
                {language === 'ko' ? 'EN' : '한국어'}
              </button>
              <Link
                href="/login"
                className="px-4 py-2 text-sm rounded-lg bg-purple-600 text-white hover:bg-purple-700"
              >
                {language === 'ko' ? '로그인' : 'Login'}
              </Link>
            </div>
          </div>
        </div>
      </header>

      {/* Hero Section */}
      <section className="pt-32 pb-20 px-4">
        <div className="max-w-7xl mx-auto">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            className="text-center"
          >
            <h1 className="text-5xl sm:text-6xl lg:text-7xl font-bold mb-6">
              <span className="bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent">
                {language === 'ko' ? '당신의 감정과' : 'Where Your Emotions'}
              </span>
              <br />
              <span className="text-gray-900 dark:text-white">
                {language === 'ko' ? '예술이 만나는 곳' : 'Meet Art'}
              </span>
            </h1>
            
            <p className="text-xl text-gray-600 dark:text-gray-300 mb-12 max-w-3xl mx-auto">
              {language === 'ko'
                ? 'AI가 당신의 감정을 이해하고 완벽한 예술 작품을 추천합니다. 16가지 예술 성향 테스트로 나만의 미술관을 만들어보세요.'
                : 'AI understands your emotions and recommends perfect artworks. Create your own museum with our 16 art personality test.'}
            </p>

            {/* Emotion Selector */}
            <div className="mb-12">
              <p className="text-sm text-gray-600 dark:text-gray-400 mb-4">
                {language === 'ko' ? '오늘의 감정을 선택하세요' : 'Select your emotion today'}
              </p>
              <div className="flex justify-center space-x-4 mb-8">
                {emotionColors.map((emotion) => (
                  <button
                    key={emotion.color}
                    onClick={() => {
                      setSelectedEmotion(emotion.color);
                      setSelectedEmotionName(emotion.name);
                    }}
                    className={`w-12 h-12 rounded-full transition-all ${
                      selectedEmotion === emotion.color ? 'scale-125 ring-4 ring-offset-2 ring-gray-300' : ''
                    }`}
                    style={{ backgroundColor: emotion.color }}
                    title={emotion.name}
                  />
                ))}
              </div>
              <p className="text-lg font-medium" style={{ color: selectedEmotion }}>
                {selectedEmotionName}
              </p>
            </div>

            {/* CTA Buttons */}
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <motion.button
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                onClick={() => router.push('/quiz')}
                className="px-8 py-4 bg-purple-600 text-white rounded-full text-lg font-semibold hover:bg-purple-700 transition-colors"
                style={{ 
                  background: `linear-gradient(135deg, ${selectedEmotion}40, ${selectedEmotion}20)`,
                  border: `2px solid ${selectedEmotion}`
                }}
              >
                {language === 'ko' ? '나의 예술 성향 찾기' : 'Find My Art Personality'}
              </motion.button>
              
              <motion.button
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                onClick={() => router.push('/gallery')}
                className="px-8 py-4 bg-white dark:bg-gray-800 text-gray-900 dark:text-white rounded-full text-lg font-semibold hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors border-2 border-gray-300 dark:border-gray-600"
              >
                {language === 'ko' ? '갤러리 둘러보기' : 'Explore Gallery'}
              </motion.button>
            </div>
          </motion.div>
        </div>
      </section>

      {/* Features Grid */}
      <section className="py-20 px-4 bg-gray-50 dark:bg-gray-900">
        <div className="max-w-7xl mx-auto">
          <motion.div
            initial={{ opacity: 0 }}
            whileInView={{ opacity: 1 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
          >
            <h2 className="text-4xl font-bold text-center mb-4 text-gray-900 dark:text-white">
              {language === 'ko' ? 'SAYU와 함께하는 예술 여정' : 'Your Art Journey with SAYU'}
            </h2>
            <p className="text-center text-gray-600 dark:text-gray-400 mb-12 max-w-2xl mx-auto">
              {language === 'ko' 
                ? '개인화된 예술 경험을 위한 6가지 핵심 기능'
                : '6 core features for your personalized art experience'}
            </p>
            
            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
              {features.map((feature, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  viewport={{ once: true }}
                  className="bg-white dark:bg-gray-800 p-6 rounded-2xl shadow-lg hover:shadow-xl transition-shadow"
                >
                  <div className="text-4xl mb-4">{feature.icon}</div>
                  <h3 className="text-xl font-semibold mb-2 text-gray-900 dark:text-white">
                    {feature.title}
                  </h3>
                  <p className="text-gray-600 dark:text-gray-400">
                    {feature.description}
                  </p>
                </motion.div>
              ))}
            </div>
          </motion.div>
        </div>
      </section>

      {/* Stats Section */}
      <section className="py-20 px-4">
        <div className="max-w-7xl mx-auto">
          <div className="grid md:grid-cols-3 gap-8 text-center">
            <div>
              <div className="text-4xl font-bold text-purple-600 dark:text-purple-400 mb-2">
                1,523+
              </div>
              <div className="text-gray-600 dark:text-gray-400">
                {language === 'ko' ? '파이오니어 멤버' : 'Pioneer Members'}
              </div>
            </div>
            <div>
              <div className="text-4xl font-bold text-purple-600 dark:text-purple-400 mb-2">
                50,000+
              </div>
              <div className="text-gray-600 dark:text-gray-400">
                {language === 'ko' ? '큐레이션된 작품' : 'Curated Artworks'}
              </div>
            </div>
            <div>
              <div className="text-4xl font-bold text-purple-600 dark:text-purple-400 mb-2">
                98%
              </div>
              <div className="text-gray-600 dark:text-gray-400">
                {language === 'ko' ? '만족도' : 'Satisfaction Rate'}
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Final CTA */}
      <section className="py-20 px-4 bg-gradient-to-r from-purple-600 to-pink-600">
        <div className="max-w-4xl mx-auto text-center text-white">
          <h2 className="text-4xl font-bold mb-6">
            {language === 'ko' ? '시작할 준비가 되셨나요?' : 'Ready to Begin?'}
          </h2>
          <p className="text-xl mb-8 opacity-90">
            {language === 'ko' 
              ? '3분의 테스트로 당신의 예술 성향을 발견하고, 평생 함께할 작품들을 만나보세요.'
              : 'Discover your art personality with a 3-minute test and meet artworks that will stay with you forever.'}
          </p>
          <motion.button
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
            onClick={() => router.push('/quiz')}
            className="px-12 py-4 bg-white text-purple-600 rounded-full text-lg font-semibold hover:bg-gray-100 transition-colors"
          >
            {language === 'ko' ? '지금 시작하기' : 'Start Now'}
          </motion.button>
        </div>
      </section>
    </div>
  );
}